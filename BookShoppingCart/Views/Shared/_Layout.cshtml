<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>EBookStore - Online Book Store</title>

    <!-- Bootstrap CSS -->
    <link href="~/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

    <!-- Bootstrap Icons (for cart) -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />
</head>
<body>

    <nav class="navbar navbar-expand-lg bg-primary navbar-dark">
        <div class="container-fluid">
            <a class="navbar-brand" href="#">EBookStore</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarColor01" aria-controls="navbarColor01" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="collapse navbar-collapse" id="navbarColor01">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                        <a class="nav-link active" href="/Home/Index">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/Home/Privacy">Privacy</a>
                        @if (User.IsInRole(Roles.Admin.ToString()))
                        {
                        <li class="nav-item">
                            <a class="nav-link" href="/AdminOperations/Dashboard">Dashboard</a>
                        </li>
                        @* <li class="nav-item">
                            <a class="nav-link" href="/AdminOperations/AllOrders">Orders</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/Stock/Index">Stock</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/Genre/Index">Genre</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/Book/Index">Genre</a>
                        </li> *@
                    }
                    
                </ul>

                <ul class="navbar-nav d-flex align-items-center gap-3">
                    <!-- Cart Icon with badge -->
                    <li class="nav-item">
                        <a class="nav-link position-relative" href="/Cart/GetUserCart">
                            <i class="bi bi-cart" style="font-size: 1.3rem;"></i>
                            <span id="cartCount" class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                                0
                            </span>
                        </a>
                    </li>

                    <!-- User login info -->
                    <li class="nav-item">
                        <partial name="_LoginPartial" />
                    </li>
                </ul>
            </div>
        </div>
    </nav>
    <div class="container">
        <partial name="_Notifications"/>
    </div>
    <div class="container mt-4">
        @RenderBody()
    </div>

    <!-- Bootstrap JS Bundle -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <!-- JavaScript for Cart Count and Add -->
    <script>
        async function add(bookId) {
            const authEl = document.getElementById("isAuthenticated");
            const isLoggedIn = authEl && authEl.innerText.trim() === "true";

            if (!isLoggedIn) {
                window.location.href = "/Identity/Account/Login";
                return;
            }

            try {
                const response = await fetch(`/Cart/AddItem?bookId=${bookId}`);
                const contentType = response.headers.get("content-type");

                if (response.ok && contentType.includes("application/json")) {
                    const result = await response.json();
                    const cartCountEl = document.getElementById("cartCount");
                    if (cartCountEl) cartCountEl.innerText = result;
                } else {
                    const errorText = await response.text();
                    console.warn("Unexpected server response:", errorText);
                }
            } catch (err) {
                console.error("Fetch error:", err);
            }
        }

        // Load cart count on page load
        document.addEventListener("DOMContentLoaded", async () => {
            const authEl = document.getElementById("isAuthenticated");
            const isLoggedIn = authEl && authEl.innerText.trim() === "true";

            if (isLoggedIn) {
                try {
                    const response = await fetch(`/Cart/GetTotalItemInCart`);
                    if (response.ok) {
                        const count = await response.json();
                        const cartCountEl = document.getElementById("cartCount");
                        if (cartCountEl) cartCountEl.innerText = count;
                    }
                } catch (err) {
                    console.error("Error loading cart count:", err);
                }
            }
        });
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
